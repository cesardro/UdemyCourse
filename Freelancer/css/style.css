/*Custom property*/
:root {
    --blanco: #FFFFFF;
    --oscuro: #212121;
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
}

/*De esta forma llamamos a los custom properties
color: var(--primario);*/

/*Con esto hacemos que 1rem = 10px
Los rem son mucho mas accesibles y adaptables
a todo tipo de pantallas*/

/* Globales */
html {
    font-size: 62.5%;
    box-sizing: border-box;
    /*Obligamos a solo poder hacer scroll en el eje Y*/
    scroll-snap-type: y mandatory;

}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-size: 16px;
    font-family: 'Krub', sans-serif;
    /* Degradado
    de abajo hacia arriba, gris clarito, blanco */
    background-image: linear-gradient(to top, #DFE9F3 0%, var(--blanco) 100%);
}

.contenedor {
    max-width: 100rem;
    margin: 0 auto;
}

.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: 0.5rem;
    width: 90%;
    text-align: center;
    border: none;
}

.boton:hover {
    cursor: pointer;
}

@media (min-width: 480px) {
    .boton {
        width: auto;
    }
}

.sombra {
    -webkit-box-shadow: 0px 5px 15px 0px rgba(102, 102, 102, 0.52);
    -moz-box-shadow: 0px 5px 15px 0px rgba(102, 102, 102, 0.52);
    box-shadow: 0px 5px 15px 0px rgba(102, 102, 102, 0.52);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

/* Tipografia */

h1 {
    font-size: 4rem;
}

h2 {
    font-size: 3rem;
}

h3 {
    font-size: 2rem;
}

h1,
h2,
h3 {
    text-align: center;
}

/* Titulos */

/*Aplica solo a los span que estan dentro de un h1*/
.titulo span {
    font-size: 2rem;
}

/*Cuanta más sea especifica la etiqueta, mas prioridad tiene
aplica la especifidad de CSS, ejemplo:
h1.titulo span tendrá prioridad por encima de 
.titulo span*/

/*Puedes usar color: blue!important para pasar por encima 
de la especifidad. No es recomendable usarlo, solo como ultimo recurso.*/

/*Utilidades*/

.w-100 {
    width: 100%;
}

@media (min-width: 768px) {
    .w-100 {
        width: auto;
    }
}

.alinear-derecha {
    justify-content: flex-end;
}

.flex {
    display: flex;
}

/* Navegacion principal */

.nav-bg {
    background-color: var(--secundario);
}

.navegacion-principal {
    display: flex;
    flex-direction: column;
}

/*480px telefono - 768 tablet - 1140px 1400px monitor/laptop*/
@media (min-width: 480px) {
    .navegacion-principal {
        flex-direction: row;
        justify-content: space-between;
    }
}

.navegacion-principal a {
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
    padding: 1rem;
}

.navegacion-principal a:hover {
    background-color: var(--primario);
    color: var(--oscuro)
}

/* Hero */

.hero {
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 45rem;
    /*El padre tiene que tener posicion relativa, para
    que el hijo pueda moverse de forma absoluta*/
    position: relative;

    margin-bottom: 2rem;
}

.contenido-hero {
    position: absolute;
    /*RGB lo ponemos a negro, y A va de 1 - 0, siendo 1 totalmente
    oscuro o color plano, y 0 siendo totalmente transparante.*/
    background-color: rgba(0, 0, 0, 0.7);
    width: 100%;
    height: 100%;

    /*Codigo para alinear vertical y horizontalmente donde sea
    se usa en todo.*/
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

div.contenido-hero p {
    display: flex;
    align-items: flex-end;
}

/* Servicios */

@media (min-width: 768px) {
    .servicios {
        display: grid;
        /*Grid Pane, ponemos el porcentaje que queremos que ocupe*/
        grid-template-columns: 33.3% 33.3% 33.3%;
        /*Espacio que deja entre las columnas.*/
        column-gap: 1rem;
    }
}

/*Alineamos el padre al centro*/
.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3 {
    color: var(--secundario);
    font-weight: normal;
}

.servicio p {
    line-height: 2;
    /*Interlineado*/
    text-align: center;
}

.servicio .iconos {
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    /* Alinear vertical y horizontalmente. */
    display: flex;
    /*Los coloca uno al frente del otro*/
    justify-content: space-evenly;
    /*Ordena horizontalmente*/
    align-items: center;
    /*Ordena verticalmente*/
}

/*Contato*/

.formulario {
    background-color: var(--gris);
    width: min(60rem, 100%);
    /*Utilizar el valor mas pequeño*/
    margin: 0 auto;
    /*Al no haber display flex es la mejor forma*/
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset {
    border: none;
}

.formulario legend {
    color: var(--primario);
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: 50% 50%;
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }

    /*Escoge el hijo del .campo, la posicion 3, en este caso campo - correo*/
    .campo:nth-child(3),
    .campo:nth-child(4) {
        /*Le decimos que tiene que ir de la columna 1 a la 3*/
        grid-column: 1 / 3;
    }
}

.campo {
    margin-bottom: 1rem;
}

.campo label {
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: 0.5rem;
    display: block;
}

/*Selecciono solamente el tipo de input que deseo modificar.
.campo input[type="text"] {

}*/

.input-text {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: 0.5rem;

}

.enviar .boton {
    width: 100%;
}

.campo textarea {
    height: 15rem;
}

/*Footer*/
.footer {
    text-align: center;
}